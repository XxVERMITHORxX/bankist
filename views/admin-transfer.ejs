<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Transfer</title>
  <style>
    /* Global Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background: linear-gradient(135deg, #1a1a2e, #16213e);
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      color: #fff;
      font-size: 16px;
      animation: fadeIn 1.5s ease-in-out;
      flex-direction: column;
    }

    /* Navbar Styles */
    .navbar {
      width: 100%;
      background: rgba(20, 20, 50, 0.9);
      display: flex;
      justify-content: space-between;
      padding: 1rem 5%;
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1000;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .navbar a {
      text-decoration: none;
      color: #fff;
      font-size: 1.2rem;
      padding: 0.8rem 1.5rem;
      border-radius: 30px;
      transition: all 0.3s ease;
    }

    .navbar a:hover {
      background: #00adb5;
      color: #fff;
      transform: scale(1.05);
    }

    /* Form Container Styles */
    .container {
      background: rgba(40, 40, 70, 0.95);
      padding: 2.5rem;
      border-radius: 20px;
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
      width: 100%;
      max-width: 400px;
      text-align: center;
      animation: slideIn 1s ease-out;
      margin-top: 8rem;
    }

    h1 {
      font-size: 2.2rem;
      margin-bottom: 1.5rem;
      text-transform: uppercase;
      letter-spacing: 1.5px;
      color: #f7f7f7;
    }

    .form-group {
      margin-bottom: 15px;
    }

    label {
      display: block;
      margin-bottom: 5px;
      color: #fff;
    }

    input[type="text"],
    input[type="number"] {
      width: 100%;
      padding: 1rem;
      margin: 0.8rem 0;
      background: #3a415d;
      border: none;
      border-radius: 8px;
      color: #fff;
      font-size: 1rem;
      outline: none;
      transition: background 0.3s ease, transform 0.2s ease;
    }

    input:focus {
      background: #2e3547;
      border-bottom: 3px solid #00adb5;
      transform: scale(1.02);
    }

    button {
      padding: 1rem 2rem;
      background: #00adb5;
      border: none;
      border-radius: 30px;
      color: white;
      font-size: 1.1rem;
      cursor: pointer;
      transition: transform 0.2s ease-in-out, background 0.3s ease;
    }

    button:hover {
      background: #02848a;
      transform: scale(1.05);
    }

    #message {
      text-align: center;
      margin-top: 10px;
    }

    /* Animations */
    @keyframes fadeIn {
      0% {
        opacity: 0;
      }

      100% {
        opacity: 1;
      }
    }

    @keyframes slideIn {
      0% {
        transform: translateY(-100px);
        opacity: 0;
      }

      100% {
        transform: translateY(0);
        opacity: 1;
      }
    }

    /* Responsiveness */
    @media (max-width: 768px) {
      .navbar {
        flex-direction: column;
        padding: 1rem;
      }

      .navbar a {
        margin-bottom: 10px;
      }

      .container {
        padding: 1rem;
        margin-top: 150px;
        /* Increased top margin for mobile screens */
      }

      h1 {
        font-size: 1.6rem;
      }
    }

    @media (max-width: 480px) {
      body {
        padding: 1rem;
      }

      .navbar a {
        font-size: 1rem;
        padding: 8px 15px;
      }

      .container {
        max-width: 100%;
        padding: 0.8rem;
      }

      button {
        font-size: 1rem;
      }
      
    }
  </style>
</head>

<body>
  <!-- Navbar -->
  <div class="navbar">
    <a href="./">Home</a>
  </div>

  <div class="container" style="margin-top: 20rem;">
    <h1>Admin Transfer</h1>
    <form id="adminTransferForm">
      <div class="form-group">
        <label for="adminUsername">Admin Username:</label>
        <input type="text" id="adminUsername" name="adminUsername" value="admin" required readonly>
      </div>

      <div class="form-group">
        <label for="recipientUsername">Recipient Username:</label>
        <input type="text" id="recipientUsername" name="recipientUsername" placeholder="Enter recipient username"
          required>
      </div>

      <div class="form-group">
        <label for="amount">Amount to Transfer:</label>
        <input type="number" id="amount" name="amount" placeholder="Enter amount" required min="0.01" step="any">
      </div>

      <button type="submit">Transfer</button>
    </form>
    <div id="message" style="margin-top: 20px;"></div>

    <h2>All Users</h2>
    <ul id="userList">
      <% if (typeof users !== 'undefined' && users.length > 0) { %>
        <% users.slice(0, 3).forEach(user => { %>
          <li><%= user.first_name %> <%= user.last_name %> (<%= user.username %>)</li>
        <% }) %>
      <% } else { %>
        <li>No users found.</li>
      <% } %>
    </ul>
    <% if (users.length > 3) { %>
      <button id="showMoreBtn" onclick="showMoreUsers()">Show More</button>
    <% } %>
  </div>

  <script>
    function showMoreUsers() {
      const userList = document.getElementById('userList');
      const showMoreBtn = document.getElementById('showMoreBtn');
      const users = <%- JSON.stringify(users) %>;

      users.slice(3).forEach(user => {
        const li = document.createElement('li');
        li.textContent = `${user.first_name} ${user.last_name} (${user.username})`;
        userList.appendChild(li);
      });

      showMoreBtn.style.display = 'none';
    }

    document.getElementById('adminTransferForm').addEventListener('submit', function (e) {
      e.preventDefault();
      const recipientUsername = document.getElementById('recipientUsername').value;
      const amount = document.getElementById('amount').value;

      fetch('/admin-transfer', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: new URLSearchParams({
          recipientUsername,
          amount
        })
      })
      .then(response => {
        if (!response.ok) {
          return response.text().then(text => { throw new Error(text) });
        }
        return response.text();
      })
      .then(message => {
        alert(message);
      })
      .catch(error => {
        alert(error.message);
      });
    });
  </script>
</body>

</html>